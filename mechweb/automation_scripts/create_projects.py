import csv
import datetime
from mechweb import wagtail_hooks
from mechweb.models import CustomUser, ProjectHomePage, ProjectPage

project_types=(
    ('1','Academic'),
    ('0','Consultancy'),
)

proj_home = ProjectHomePage.objects.all()[0]
proj_number = ProjectPage.objects.all().count()
with open('mechweb/automation_scripts/projects.tsv', mode='r') as tsv_file:
    tsv_reader = csv.DictReader(tsv_file, dialect='excel-tab')
    line_count = 0
    logf = open("mechweb/automation_scripts/project_errors.log", "a")
    logf.write("----------------------------------\nAdding projects on  {0}\n----------------------------------\n".format(datetime.datetime.now() ))
    for row in tsv_reader:
        if line_count == 0:
        	pass
        	#can add to check csv format
        try:
            print("Creating project: {}".format(str(row["name"])))
            if row["start_date"]:
                start_date_int = int(row["start_date"])
                start_dt = datetime.date(start_date_int, 1, 1)
            else:
                start_dt = datetime.date(2000,1,1)

            if row["end_date"]:
                end_date_int = int(row["end_date"])
                end_dt = datetime.date(end_date_int, 1, 1)
            else:
                end_dt = datetime.date(2000,1,1)
            
            try:
                current_proj_number=proj_number+line_count
                base_slug = ProjectPage()._get_autogenerated_slug(current_proj_number)
            except:
                base_slug = ProjectPage()._get_autogenerated_slug(slugify(row["project_type"]+"_"+row["name"]))
                
            proj=ProjectPage(
                title=row["name"],
                slug=base_slug,
                name=row["name"],
                project_type=row["project_type"],
                #------------------------------
                funding_agency=row["funding_agency"],
                funding_agency_link=row["funding_agency_link"],
                start_date=start_dt,
                end_date=end_dt,
                budget=row["budget"],
                description=row["description"],
                alt_PI_text=row["alt_PI_text"],
            )
            proj_home.add_child(instance=proj)
            proj_home.save()
            print("Created!")
        except Exception as e:
            logf.write("{0}\n".format(str(e)))
            # logf.write("Failed to add proj. no. {} | {}:{} due to {}\n".format(line_count, project_types[row["project_type"]], str(row["name"]), str(e)))
        line_count += 1
    logf.close()

# # for deleting the projects
# from mechweb.models import ProjectPage
# for proj in ProjectPage.objects.all():
#     print("Deleting",proj.title)
#     proj.delete()
#     print("Deleted!")

# from mechweb.automation_scripts import create_projects

# lab_type
# faculty_incharge
# intro
# body
# contact_number
# address
# photo_1
# photo_2
# photo_3