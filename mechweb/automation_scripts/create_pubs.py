# import csv
# from datetime import datetime
# from mechweb import wagtail_hooks
# from mechweb.models import CustomUser, PublicationPage, PublicationHomePage


# publication_types = {
#     '0':'Poster',
#     '1':'Conference Publication',
#     '2':'Journal Publication',
#     '3':'Patent',
#     '4':'Books',
#     '5':'Book Chapters',
# }

# pub_home = PublicationHomePage.objects.all()[0]
# with open('mechweb/automation_scripts/pubs.tsv', mode='r') as tsv_file:
#     tsv_reader = csv.DictReader(tsv_file, dialect='excel-tab')
#     line_count = 0
#     logf = open("mechweb/automation_scripts/pub_errors.log", "a")
#     for row in tsv_reader:
#         if line_count == 0:
#         	pass
#         	#can add to check csv format
#         try:
#             pub_yr_int = int(row["pub_year"])
#             pub_yr = datetime.date(yr, 1, 1)
#             try:
#                 base_slug = PublicationPage()._get_autogenerated_slug(slugify(row["pub_year"]+"_"+row["pub_type"]+"_"+row["name"]))
#             except:
#                 base_slug = PublicationPage()._get_autogenerated_slug(pub_home.)
#             pub=PublicationPage(
#                 title=row["name"],
#                 slug=base_slug,
#                 name=row["name"],
#                 abstract=row["abstract"],
#                 pub_type=row["pub_type"],
#                 download_link=row["download_link"],
#                 pub_issue=row["pub_issue"],
#                 pub_year=pub_yr,
#                 pub_journal=row["pub_journal"],
#                 pub_vol=row["pub_vol"],
#                 page_start=row["page_start"],
#                 page_end=row["page_end"],
#                 citations=row["citations"],
#             )
#             pub_home.add_child(instance=pub)
#             pub_home.save()
#         except Exception as e:
#             logf.write("Failed to add {0}:{1} due to  {2}\n".format(publication_types[row["pub_type"]], str(row["name"]), str(e)))
#         line_count += 1
#     logf.close()

# ########### For testing purposes
# # with open('mechweb/automation_scripts/users.tsv', mode='r') as tsv_file:
# #     tsv_reader = csv.DictReader(tsv_file, dialect='excel-tab')
# #     line_count = 0
# #     for row in tsv_reader:
# #         if line_count == 0:
# #             pass
# #         user=CustomUser.objects.create(
# #             is_staff = True,
# #             user_type = row["user_type"], 
# #             username = row["username"], 
# #             first_name = row["first_name"], 
# #             last_name = row["last_name"], 
# #             email = row["email"], 
# #             password = row["password"], 
# #         )
# #         user.save()
# #         line_count += 1

# # user=CustomUser.objects.get(email='webweb@iitg.ac.in')
# # user.delete()
# # user=CustomUser.objects.create(
# #     is_staff = True,
# #     user_type = 4, 
# #     username = 'webweb', 
# #     first_name = 'Web', 
# #     last_name = 'Web', 
# #     email = 'webweb@iitg.ac.in', 
# #     password = 'webwebmechweb@12345l789',
# #     uid='000000000',
# # )
# # group_name_int=user.user_type
# # group_name_str=str(group_name_int)
# # group_name=user_type_choices[group_name_str]
# # user_group = Group.objects.get_or_create(name=group_name)
# # x, y = user_group
# # user.groups.add(x.id)
# # user.save()
# # # user_group.user_set.add(user)
# # # user.save()
# # user.set_password(user.password)
# # user.save()

# # user_type_choices = {
# #     '0':'Faculty',
# #     '1':'Student',
# #     '2':'Alumni',
# #     '3':'Staff',
# #     '4':'Others',
# # }

# # for user in CustomUser.objects.all():
# #     if user.email == 'mechadmin@iitg.ac.in':
# #         pass
# #     else:
# #         group_name_int=user.user_type
# #         group_name_str=str(group_name_int)
# #         group_name=user_type_choices[group_name_str]
# #         user_group = Group.objects.get_or_create(name=group_name)
# #         x, y = user_group
# #         user.groups.add(x.id)
# #         user.save()
