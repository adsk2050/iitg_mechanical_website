# Generated by Django 2.2.1 on 2019-06-08 11:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('wagtailimages', '0001_squashed_0021'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('wagtaildocs', '0010_document_file_hash'),
        ('mechweb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlumniHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': 'Alumni Home',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AlumniInterestTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlumnusPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email_id', models.EmailField(max_length=254, unique=True)),
                ('roll_no', models.IntegerField(unique=True)),
                ('enrolment_year', models.DateField()),
                ('programme', models.CharField(choices=[('0', 'Bachelor'), ('1', 'Masters'), ('2', 'Research Scholar'), ('3', 'Other, e.g. PostDoc or N.A.')], max_length=2)),
                ('contact_number', models.CharField(blank=True, max_length=20)),
                ('hostel_address', models.CharField(blank=True, max_length=25)),
                ('specialization', models.CharField(choices=[('0', 'Not Applicable'), ('1', 'Aerodynamics & Propulsion'), ('2', 'Computer Aided Manufacturing'), ('3', 'Computational Mechanics'), ('4', 'Fluids and Thermal'), ('5', 'Machine Design')], default='0', help_text='Not Applicable - for B.Tech, PhD and PostDocs', max_length=2)),
                ('intro', models.CharField(blank=True, max_length=250)),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('website', models.URLField(blank=True, max_length=250)),
                ('contact_number_2', models.CharField(blank=True, max_length=20)),
                ('email_id_2', models.EmailField(blank=True, max_length=254)),
                ('address_line_1', models.CharField(blank=True, max_length=100)),
                ('address_line_2', models.CharField(blank=True, max_length=50)),
                ('address_line_3', models.CharField(blank=True, max_length=25)),
                ('interests', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='mechweb.AlumniInterestTag', to='taggit.Tag', verbose_name='Interests')),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alumnus',
                'verbose_name_plural': 'Alumni',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CoursePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=10)),
                ('lectures', models.IntegerField()),
                ('tutorials', models.IntegerField()),
                ('practicals', models.IntegerField()),
                ('credits', models.IntegerField()),
                ('semester', models.IntegerField()),
                ('course_type', models.CharField(choices=[('Departmental', (('0', 'Core course'), ('1', 'Department Elective'), ('2', 'Department Open Elective'))), ('Non-Departmental', (('3', 'Common course'), ('4', 'HSS Elective'), ('4', 'Open Elective')))], default='0', max_length=100)),
                ('eligible_programmes', models.CharField(choices=[('0', 'Bachelor'), ('1', 'Masters'), ('2', 'Research Scholar'), ('3', 'Other, e.g. PostDoc or N.A.')], default='0', help_text='Minimum qualification needed to take course', max_length=100)),
                ('description', wagtail.core.fields.RichTextField(blank=True)),
                ('course_page_link', models.URLField()),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CourseStructure',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Course Structure',
                'verbose_name_plural': 'CourseStructure',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='EventPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('event_name', models.CharField(blank=True, max_length=50)),
                ('description', wagtail.core.fields.RichTextField(blank=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('venue', models.CharField(blank=True, choices=[('0', 'Seminar hall')], default='0', max_length=50)),
                ('event_type', models.CharField(choices=[('0', 'Meeting'), ('1', 'Seminar'), ('2', 'Workshop'), ('3', 'Informal event'), ('4', 'Conference'), ('5', 'PhD viva')], default='0', max_length=50)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('poster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FacultyHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FacultyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('office_contact_number', models.CharField(blank=True, max_length=20)),
                ('home_contact_number', models.CharField(blank=True, max_length=20)),
                ('office_address_line_1', models.CharField(blank=True, max_length=25)),
                ('home_address_line_1', models.CharField(blank=True, max_length=25)),
                ('email_id', models.EmailField(max_length=254, unique=True)),
                ('intro', models.CharField(blank=True, max_length=250)),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('joining_date', models.DateField(default=django.utils.timezone.now)),
                ('leaving_date', models.DateField(blank=True, null=True)),
                ('designation', models.CharField(choices=[('0', 'HAG'), ('1', 'Professor'), ('2', 'Assistant Professor'), ('3', 'Associate Professor'), ('4', 'Visiting Professor'), ('5', 'Professor On lien')], default='3', max_length=2)),
                ('website', models.URLField(max_length=250)),
                ('additional_roles', models.CharField(choices=[('2', 'Not Applicable'), ('1', 'HoD'), ('0', 'Director')], default='2', max_length=2)),
                ('disposal_committee', models.CharField(choices=[('4', 'Not Applicable'), ('0', 'Chairman'), ('1', 'Member'), ('2', 'External Member'), ('3', 'Non Member Secretary')], default='4', max_length=2)),
                ('laboratory_in_charge', models.CharField(choices=[('14', 'Not Applicable'), ('0', 'Advanced Manufacturing Laboratory'), ('1', 'CAD Laboratory'), ('2', 'Central Workshop'), ('3', 'Fluid Mechanics Laboratory'), ('4', 'IC Engines Laboratory'), ('5', 'Instrumentation and Control Laboratory'), ('6', 'Material Science Laboratory'), ('7', 'Tribology Laboratory'), ('8', 'Mechatronics and Robotics Laboratory'), ('9', 'Strength of Materials Laboratory'), ('10', 'Theory of Machines Laboratory'), ('11', 'Thermal Science Laboratory'), ('12', 'Turbo Machinary Laboratory'), ('13', 'Vibrations and Acoustics Laboratory')], default='14', max_length=2)),
                ('faculty_in_charge', models.CharField(choices=[('11', 'Not Applicable'), ('0', 'BTP Co ordinator'), ('1', 'MTP Co ordinator'), ('2', 'Central Workshop'), ('3', 'Library Committee'), ('4', 'Training and Placement'), ('5', 'Departmental Seminar Room'), ('6', 'Secretary Faculty Meeting'), ('7', 'PG Computational Lab'), ('8', 'Research Scholar Room'), ('9', 'Time Table Committee'), ('10', 'Departmental Website')], default='11', max_length=2)),
                ('disciplinary_committee', models.CharField(choices=[('4', 'Not Applicable'), ('0', 'Chairman'), ('1', 'Secretary'), ('2', 'Member Secretary'), ('3', 'Student Member')], default='4', max_length=2)),
                ('dupc', models.CharField(choices=[('6', 'Not Applicable'), ('0', 'Chairman'), ('1', 'Secretary'), ('2', 'Faculty Member'), ('3', 'External Member'), ('4', '3rd year BTech'), ('5', '2nd year BTech')], default='6', max_length=2)),
                ('dppc', models.CharField(choices=[('6', 'Not Applicable'), ('0', 'Chairman'), ('1', 'Secretary'), ('2', 'Faculty Member'), ('3', 'External Member'), ('4', 'PhD Student Member'), ('5', 'MTech Student Member')], default='6', max_length=2)),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Faculty',
                'verbose_name_plural': 'Faculty',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='MechHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': 'Home',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProjectHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Project Home',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProjectPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('description', wagtail.core.fields.RichTextField(blank=True)),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True)),
                ('end_date', models.DateField(blank=True)),
                ('budget', models.FloatField(blank=True)),
                ('funding_agency', models.CharField(max_length=100)),
                ('funding_agency_link', models.URLField(blank=True, max_length=100)),
                ('project_type', models.CharField(choices=[('1', 'Academic'), ('0', 'Consultancy')], default='1', max_length=20)),
                ('principal_investigator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='principal_investigator', to='mechweb.FacultyPage')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PublicationHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Publication Home',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PublicationPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('abstract', wagtail.core.fields.RichTextField(blank=True)),
                ('pub_type', models.CharField(choices=[('0', 'Poster'), ('1', 'Conference Publication'), ('2', 'Journal Publication'), ('3', 'Patent'), ('4', 'Books'), ('5', 'Book Chapters')], default='0', max_length=2)),
                ('download_link', models.URLField(blank=True, max_length=100)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'verbose_name': 'Publication',
                'verbose_name_plural': 'Publications',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ResearchHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': 'Research Home',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ResearchLabPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('name', models.CharField(max_length=100)),
                ('lab_type', models.CharField(choices=[('0', 'UG Lab'), ('1', 'PG Lab')], default='0', max_length=2)),
                ('intro', models.CharField(max_length=250)),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('contact_number', models.CharField(blank=True, max_length=20)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('faculty_incharge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_incharge', to='mechweb.FacultyPage')),
                ('photo_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('photo_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('photo_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Lab',
                'verbose_name_plural': 'Labs',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StaffHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': 'Staff Home',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StaffPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email_id', models.EmailField(max_length=254)),
                ('designation', models.CharField(choices=[('0', 'Administrative Staff'), ('1', 'Lab Staff'), ('2', 'Technicial staff'), ('3', 'Others')], default='1', max_length=2)),
                ('joining_year', models.DateField()),
                ('contact_number', models.CharField(blank=True, max_length=20)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('intro', models.CharField(blank=True, max_length=250)),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staff',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StudentHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': 'Student Home',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StudentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email_id', models.EmailField(max_length=254, unique=True)),
                ('roll_no', models.IntegerField(unique=True)),
                ('enrolment_year', models.DateField()),
                ('programme', models.CharField(choices=[('0', 'Bachelor'), ('1', 'Masters'), ('2', 'Research Scholar'), ('3', 'Other, e.g. PostDoc or N.A.')], max_length=2)),
                ('contact_number', models.CharField(blank=True, max_length=20)),
                ('hostel_address', models.CharField(blank=True, max_length=25)),
                ('specialization', models.CharField(choices=[('0', 'Not Applicable'), ('1', 'Aerodynamics & Propulsion'), ('2', 'Computer Aided Manufacturing'), ('3', 'Computational Mechanics'), ('4', 'Fluids and Thermal'), ('5', 'Machine Design')], default='0', help_text='Not Applicable - for B.Tech, PhD and PostDocs', max_length=2)),
                ('intro', models.CharField(blank=True, max_length=250)),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('website', models.URLField(blank=True, max_length=250)),
                ('faculty_advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_advisor', to='mechweb.FacultyPage')),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StudentResearchInterestTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='mechweb.StudentPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mechweb_studentresearchinteresttag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=50)),
                ('abstract', wagtail.core.fields.RichTextField(blank=True)),
                ('link', models.URLField(blank=True, max_length=250)),
                ('co_guide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='co_guide', to='mechweb.FacultyPage')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('guide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='guide', to='mechweb.FacultyPage')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='mechweb.StudentPage')),
                ('photo_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('photo_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('photo_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentPageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link', models.URLField(max_length=250)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='mechweb.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentPageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='mechweb.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='studentpage',
            name='research_interests',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='mechweb.StudentResearchInterestTag', to='taggit.Tag', verbose_name='Research Interests'),
        ),
        migrations.AddField(
            model_name='studentpage',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='StaffSkillag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='mechweb.StaffPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mechweb_staffskillag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='staffpage',
            name='skills',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='mechweb.StaffSkillag', to='taggit.Tag', verbose_name='Skills'),
        ),
        migrations.AddField(
            model_name='staffpage',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ResearchLabStudents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('research_statement', wagtail.core.fields.RichTextField(blank=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='mechweb.ResearchLabPage')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_lab', to='mechweb.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResearchLabPageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link', models.URLField(max_length=250)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='mechweb.ResearchLabPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResearchLabFaculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('research_statement', wagtail.core.fields.RichTextField(blank=True)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_lab', to='mechweb.FacultyPage')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty', to='mechweb.ResearchLabPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationPageStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('research_statement', wagtail.core.fields.RichTextField(blank=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='mechweb.PublicationPage')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_pub', to='mechweb.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationPageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link', models.URLField(max_length=250)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='mechweb.PublicationPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationPageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mechweb.PublicationPage')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationPageFaculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('research_statement', wagtail.core.fields.RichTextField(blank=True)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_pub', to='mechweb.FacultyPage')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty', to='mechweb.PublicationPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPageStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('project_statement', wagtail.core.fields.RichTextField(blank=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='mechweb.ProjectPage')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_co_investigator', to='mechweb.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link', models.URLField(max_length=250)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='mechweb.ProjectPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='mechweb.ProjectPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPageFaculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('project_statement', wagtail.core.fields.RichTextField(blank=True)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_co_investigator', to='mechweb.FacultyPage')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty', to='mechweb.ProjectPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MechHomePageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='mechweb.MechHomePage')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabEquipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(blank=True, max_length=25)),
                ('specifications', wagtail.core.fields.RichTextField(blank=True)),
                ('cost', models.FloatField(blank=True)),
                ('date_of_procurement', models.DateField(blank=True)),
                ('link', models.URLField(blank=True, max_length=250)),
                ('funding_agency', models.CharField(blank=True, max_length=50)),
                ('funding_agency_link', models.URLField(blank=True, max_length=250)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operator', to='mechweb.StaffPage')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='mechweb.ResearchLabPage')),
                ('photo_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomeTextPanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(blank=True, max_length=50)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('date', models.DateTimeField()),
                ('content_type', models.CharField(choices=[('0', 'News'), ('1', 'Announcements'), ('2', 'Others')], default='0', max_length=50)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_panels', to='mechweb.MechHomePage')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FacultyResearchInterestTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='mechweb.FacultyPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mechweb_facultyresearchinteresttag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FacultyPageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='mechweb.FacultyPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='facultypage',
            name='research_interests',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='mechweb.FacultyResearchInterestTag', to='taggit.Tag', verbose_name='Research Interests'),
        ),
        migrations.AddField(
            model_name='facultypage',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='FacultyAnnouncement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link', models.URLField(max_length=250)),
                ('message', wagtail.core.fields.RichTextField(blank=True)),
                ('title', models.CharField(blank=True, max_length=50)),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_announcement', to='mechweb.FacultyPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventPageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link', models.URLField(max_length=250)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='mechweb.EventPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventPageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='mechweb.EventPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventHomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
                ('featured_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='featured_event', to='mechweb.EventPage')),
            ],
            options={
                'verbose_name': 'Event Home',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DistinguishedAlumni',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('about', wagtail.core.fields.RichTextField(blank=True)),
                ('distinguished_alumnus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='distinguished_alumnus', to='mechweb.AlumnusPage')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='distinguished_alumni', to='mechweb.AlumniHomePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoursePageFaculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('session', models.DateField()),
                ('introduction', wagtail.core.fields.RichTextField(blank=True)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_instructor', to='mechweb.FacultyPage')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_instructor', to='mechweb.CoursePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseAnnouncementPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('announcement', wagtail.core.fields.RichTextField(blank=True, max_length=250)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_announcements', to='mechweb.CoursePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlumnusPageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link', models.URLField(max_length=250)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='alum_links', to='mechweb.AlumnusPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlumnusPageJobDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=20)),
                ('company', models.CharField(blank=True, max_length=20)),
                ('work_details', models.CharField(blank=True, max_length=500)),
                ('link', models.URLField(blank=True, max_length=250)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_details', to='mechweb.AlumnusPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlumnusPageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='alum_gallery_images', to='mechweb.AlumnusPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='alumniinteresttag',
            name='content_object',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='alumni_tagged_items', to='mechweb.AlumnusPage'),
        ),
        migrations.AddField(
            model_name='alumniinteresttag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mechweb_alumniinteresttag_items', to='taggit.Tag'),
        ),
    ]
