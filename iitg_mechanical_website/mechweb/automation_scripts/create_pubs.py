import csv
import datetime
from mechweb import wagtail_hooks
from mechweb.models import CustomUser, PublicationPage, PublicationHomePage
from django.utils.text import slugify

publication_types = {
    '0':'Poster',
    '1':'Conference Publication',
    '2':'Journal Publication',
    '3':'Books',
    '4':'Book Chapters',
    '5':'Patent',
}

pub_home = PublicationHomePage.objects.all()[0]
pub_number = PublicationPage.objects.all().count()
with open('mechweb/automation_scripts/pubs.tsv', mode='r') as tsv_file:
    tsv_reader = csv.DictReader(tsv_file, dialect='excel-tab')
    line_count = 0
    logf = open("mechweb/automation_scripts/pub_errors.log", "a")
    logf.write("----------------------------------\nAdding publications on  {0}\n----------------------------------\n".format(datetime.datetime.now() ))
    for row in tsv_reader:
        if line_count == 0:
        	pass
        	#can add to check csv format
        try:
            print("Creating publication: {}".format(str(row["name"])))
            if row["pub_year"]:
                pub_yr_int = int(row["pub_year"])
                pub_yr = datetime.date(pub_yr_int, 1, 1)
            else:
                pub_yr = datetime.date(2000,1,1)

            # try:
            #     current_pub_number=pub_number+line_count
            #     base_slug = PublicationPage()._get_autogenerated_slug(current_pub_number)
            # except:
            base_slug = PublicationPage()._get_autogenerated_slug(slugify(row["pub_year"]+"_"+row["pub_type"]+"_"+row["name"]))
                
            pub=PublicationPage(
                title=row["name"],
                slug=base_slug,
                name=row["name"],
                pub_type=row["pub_type"],
                alt_people_text=row["alt_people_text"],
                #------------------------------
                pub_year=pub_yr,
                pub_journal=row["pub_journal"],
                pub_vol=row["pub_vol"],
                pub_issue=row["pub_issue"],
                page_start=row["page_start"],
                page_end=row["page_end"],
                citations=row["citations"],
                abstract=row["abstract"],
                download_link=row["download_link"],
            )
            pub_home.add_child(instance=pub)
            pub_home.save()
            print("Created!")
        except Exception as e:
            logf.write("Failed to add pub. no. {0} | {1}:{2} due to {3} \n".format(line_count, row["pub_type"], str(row["name"]), str(e)))
        line_count += 1
    logf.close()

# # for deleting the publications
# from mechweb.models import PublicationPage
# for pub in PublicationPage.objects.all():
#     print("Deleting",pub.title)
#     pub.delete()
#     print("Deleted!")

